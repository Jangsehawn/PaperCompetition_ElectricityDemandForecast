import os
os.getcwd()
os.chdir("C:/Users/임대현/Downloads/학습컨텐츠/thesis (statistics)/dataset")
import pandas as pd
#2015
sub2015 = pd.read_excel("2015.xlsx", sheet_name="2015년")
sub2015 = pd.DataFrame(sub2015)
sub2015['날짜'] = pd.to_datetime(sub2015['날짜'])
sub2015 = sub2015.sort_values(by = '날짜')
#2016
sub2016 = pd.read_excel("2016.xlsx",sheet_name="2016년")
sub2016 = pd.DataFrame(sub2016)
sub2016['날짜'] = pd.to_datetime(sub2016['날짜'])
#2017
sub2017 = pd.read_excel("2017.xlsx", sheet_name = "2017년")
sub2017 = pd.DataFrame(sub2017)
sub2017['날짜'] = pd.to_datetime(sub2017['날짜'])
#2018
sub2018 = pd.read_excel("2018.xlsx", sheet_name = "2018년 역별 시간대별 이용인원")
sub2018 = pd.DataFrame(sub2018)
sub2018['날짜'] = pd.to_datetime(sub2018['날짜'])
#2019
sub2019 = pd.read_excel("2019.xlsx", sheet_name = "2019년 1~12월 역별 시간대별 이용인원")
sub2019 = pd.DataFrame(sub2019)
sub2019['날짜'] = pd.to_datetime(sub2019['날짜'])
#2020
sub2020 = pd.read_excel("2020.xlsx", sheet_name = "역별 시간대별 이용인원 상단리스트 (34)")
sub2020 = pd.DataFrame(sub2020)
sub2020['날짜'] = pd.to_datetime(sub2020['날짜'])

#1년 정렬
dates2015 = pd.date_range('20150101', periods=365)
dates2016 = pd.date_range('20160101', periods=366)
dates2017 = pd.date_range('20170101', periods=365)
dates2018 = pd.date_range('20180101', periods=365)
dates2019 = pd.date_range('20190101', periods=365)
dates2020 = pd.date_range('20200101', periods=121)

import matplotlib.pyplot as plt
from matplotlib import font_manager, rc
import platform

if platform.system() == 'Windows':
    path = 'c:/Windows/Fonts/malgun.ttf'
    font_name = font_manager.FontProperties(fname = path).get_name()
    rc('font', family = font_name)
elif platform.system() == 'Darwin':
    rc('font', family = 'AppleGothic')
else : 
    print('Check your OS system')
    
    
sta15_list = list(sub2015['역명'].unique())
sda15_list = list(sub2015['날짜'].unique())

condition151 = (sub2015['역명'] == sta15_list[0]) & (sub2015['구분'] == '승차')
condition152 = (sub2015['역명'] == sta15_list[0]) & (sub2015['구분'] == '하차')
sub_filter151 = sub2015[condition151]
sub_filter152 = sub2015[condition152]

demand15 = []
for k in range(0,365):
    demand15.append(int(list(sub_filter151['합계'])[k] + list(sub_filter152['합계'])[k]))

# 15년도 수요그래프

for sta15 in sta15_list:
    
    condition151 = (sub2015['역명'] == sta15) & (sub2015['구분'] == '승차')
    condition152 = (sub2015['역명'] == sta15) & (sub2015['구분'] == '하차')
 
sub_filter151 = sub2015[condition151]
sub_filter152 = sub2015[condition152]
demand15 = []
for k in range(0,365):
    demand15.append(int(list(sub_filter151['합계'])[k] + list(sub_filter152['합계'])[k]))
    
 
 
 
plt.figure(figsize = (16,4))
plt.plot(sda15_list,demand15)
    
plt.title('2015년 {}역의 승하차수요'.format(sta15))
plt.ylabel('승차인원수 (단위:만)')
  
plt.xticks(['2015-01-01','2015-02-01','2015-03-01','2015-04-01','2015-05-01','2015-06-01',
            '2015-07-01','2015-08-01','2015-09-01','2015-10-01','2015-11-01','2015-12-01'])
    
plt.show()
    
    
    
    














